<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.UserMapper">
<!--    <select id="logincheck" parameterType="com.entity.Admin" resultType="com.entity.Admin">
select * from admin where username=#{username} and password=#{password}
</select>-->
    <select id="getUsers" resultType="com.entity.User">
select * from user where code!=1 order by id
</select>
    <!-- int deleteUserById(Integer id) -->
    <delete id="deleteUserById" parameterType="int">
 delete  from user where id=#{id}
</delete>
    <!-- int updateUser(User user) -->
    <update id="updateUser" parameterType="User" >
 update user
<set>
<if test="username!=null and username!=''">
username=#{username},
</if>
<if test="password!=null and password!=''">
password=#{password},
</if>
<if test="telephone!=null and telephone!=''">
telephone=#{telephone},
</if>
<if test="email!=null and email!=''">
email=#{email},
</if>
<if test="gender!=null and gender!=''">
gender=#{gender},
</if>
<if test="photoPath!=null and photoPath!=''">
photoPath=#{photoPath},
</if>
<if test="code!=null and code!=''">
code=#{code}
</if>
</set>
<where>
<if test="id!=null">
id=#{id}
</if>
</where>
</update>
    <!-- User getUserById(Integer id); -->
<select id="getUserByOther" parameterType="com.entity.User" resultType="com.entity.User">
select * from user
<where>
<if test="username!=null and username!=''">
username=#{username}
</if>
<if test="loginname!=null and loginname!=''">
and loginname=#{loginname}
</if>
<if test="gender!=null and gender!=''">
and gender=#{gender}
</if>
</where>
</select>
<select id="getUserById" parameterType="int" resultType="com.entity.User">
    select * from user where id=#{id}
</select>
    <insert id="saveUser" parameterType="com.entity.User">
insert into user(username,loginname,password,registerTime) values(#{username},#{loginname},#{password},#{registerTime})
</insert>
    <insert id="addUser" parameterType="com.entity.User">
insert into user(username,loginname,password,telephone,email,gender,photoPath,registerTime) values(#{username},#{loginname},#{password},#{telephone},#{email},#{gender},#{photoPath},#{registerTime})
</insert>
    <update id="closeUser" parameterType="int">
update user set code=1 where id=#{id}
</update>
    <select id="getCloseUsers" resultType="com.entity.User">
select * from user where code=1 order by id
</select>
    <update id="openUser" parameterType="int">
update user set code=0 where id=#{id}
</update>
    <select id="countUser" resultType="int">
select count(*) from user
</select>
    <select id="getCloseUserByLoginName" resultType="com.entity.User" parameterType="String">
select * from user where loginname=#{loginname}
</select>
    <select id="loginCheck" parameterType="com.entity.User" resultType="com.entity.User">
select * from user where loginname=#{loginname} and password=#{password}
    </select>
</mapper>